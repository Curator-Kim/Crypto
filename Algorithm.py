import random
import math
def fast_mod(x,n,m):
    d=1
    while n>0:
        if n&0x1==1:
            d=(d*x)%m
        n>>=1
        x=(x*x)%m
    return d

def expand_gcd(a,b):
    a,b=abs(a),abs(b)
    x1=1
    y1=0
    x2=0
    y2=1
    while a!=0 and b!=0:
        if(a>b):
            x1-=x2*(a//b)
            y1-=y2*(a//b)
            a=a%b
            
        else:
            x2-=x1*(b//a)
            y2-=y1*(b//a)
            b=b%a
    if(a>b):
        return a,x1,y1
    else:
        return b,x2,y2

def MilerRabinTest(n,times=10):#"0"代表素数,"1"代表合数
    if(n==2):return 0
    if n%2==0 or n%3==0 or n%5==0 or n%7==0:return 1
    #找出k和q
    k=1
    while (n-1)%pow(2,k)==0:
        k+=1
    k-=1
    q=(n-1)//pow(2,k)
    #
    for i in range(times):
        flag=0
        a=random.randint(2,n-1)
        if fast_mod(a,q,n)==1:
            continue
        for j in range(0,k):
            if(fast_mod(a,pow(2,j)*q,n)==n-1):
                flag=1
                break
        if(flag==1):continue
        return 1
    return 0

def n2bytes(x,k=None):
    if k==None:
        return x.to_bytes(math.ceil(x.bit_length()/8),'big')
    else:
        return x.to_bytes(k,'big')

def crt(a,m):
    M=1
    e=[]
    k=len(a)
    for i in range(k):
        M*=m[i]
    #求乘法逆元
    for i in range(k):
        e.append(expand_gcd(int(M//m[i]),m[i])[1])
    sum=0
    for i in range(k):
        sum+=(int(M//m[i])*e[i]*a[i])
    return(sum%M)


def MilerTest():#Miler测试函数
    n=1000023
    if(MilerRabinTest(n)==1): print("%d是合数"%n)
    else:print("%d是素数"%n)

    n=1000033
    if(MilerRabinTest(n)==1): print("%d是合数"%n)
    else:print("%d是素数"%n)

    n=100160063
    if(MilerRabinTest(n)==1): print("%d是合数"%n)
    else:print("%d是素数"%n)

    n=1500450271
    if(MilerRabinTest(n)==1): print("%d是合数"%n)
    else:print("%d是素数"%n)

    n=1494462659429290047815067355171411187560751791530
    if(MilerRabinTest(n)==1): print("%d是合数"%n)
    else:print("%d是素数"%n)

    n=22490812876539885046336053040043361022772062226905764414319531416752624982967181455912526153033030222985778230314070837549143068021815197910334221004333099
    if(MilerRabinTest(n)==1): print("%d是合数"%n)
    else:print("%d是素数"%n)

    n=173114538715442253801652636578504897235814058376012019984132280493073144140873423822066926533851768593567972986030786930865304524765873917291156820356593465395949615668311730524585862713216977118030162614331116320577533153712280997129347743623082819252354000224098702300466561157715990374851814717133985999661
    if(MilerRabinTest(n)==1): print("%d是合数"%n)
    else:print("%d是素数"%n)

def crtTest():
    k=3
    a=[0,0,0]
    m=[23,28,33]
    print("方程组的解为：%d"%(crt(a,m)))

    a=[5,20,34]
    m=[23,28,33]
    print("方程组的解为：%d"%(crt(a,m)))

    a=[283,102,23]
    m=[23,28,33]
    print("方程组的解为：%d"%(crt(a,m)))

    a=[802310684485241212312289432691586430708135062249,961714109955647014172499578071923389425123540027,1381194006087304024683552712488022595194097928701]
    m=[489808178709479466279507878773770708214878979673,896234965496726578561614071442814700467907036641,1213827005758305602466882992172310409456053868843]
    print("方程组的解为：%d"%(crt(a,m)))

    a=[8157969540288411637818433039558323184074779086100165504668538221920170369774913261335059602331627321130656458962980224196880533337839226059601303464776145,
       9699616044315021194953572561076502992783130623216574220426043600142343504101508838526221359049417564415801914072315788919275792502477693022853881785198116,
       7832693802256371667866514213119452199821916193668106904135812283217637737600922381702016472708855675649121271702977408217814917908566132517503707494037556]
    m=[13392316081651420877308875276166772808601812122052371442339078877740399569281672683820206196320955005869072002883847646526584107260355414977120453263391947,
       9734466939658282823343760206593283968765904848250021580218634383869090913086348857668999272399075016287736914000854272239315769632719896968098820774563511,
       9460200357790728398862913232664036038694521858415765931064505193755202156521446156499075450033429983317127589636591133111239548821251790171694322930011927]
    print("方程组的解为：%d"%(crt(a,m)))

if __name__=='__main__':
    crtTest()